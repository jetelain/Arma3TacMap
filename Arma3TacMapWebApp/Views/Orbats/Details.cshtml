@model Arma3TacMapWebApp.Entities.Orbat
@inject IHtmlLocalizer<SharedResource> Localizer
@inject Pmad.Milsymbol.AspNetCore.Services.IApp6dSymbolGenerator App6dSymbolGenerator

@{
    ViewData["Title"] = Model.Label;
    var canEdit = (bool?)ViewBag.CanEdit ?? false;
    var roots = Model.Units?.Where(u => u.Parent == null);

}
<div class="container">
    <h1>@Model.Label</h1>

    @if (roots != null && roots.Count() == 1)
    {
        var root = roots.First();
        <pmad-orbat root-unit="@root"
            unit-title="@(u => ((Arma3TacMapWebApp.Entities.OrbatUnit)u).UniqueDesignation)"
            unit-link-controller="OrbatUnits" unit-link-action="Details" unit-link-route="@(u => new { id = ((Arma3TacMapWebApp.Entities.OrbatUnit)u).OrbatUnitID })" />
    }

    <div>
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Owner)
            </dt>
            <dd class="col-sm-4">
                @Html.DisplayFor(model => model.Owner!.UserLabel)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Visibility)
            </dt>
            <dd class="col-sm-4">
                @Html.DisplayFor(model => model.Visibility)
            </dd>
        </dl>
    </div>
    @if (canEdit)
    {
        <p>
            <a asp-controller="OrbatUnits" asp-action="Create" asp-route-orbatID="@Model.OrbatID" class="btn btn-primary">@Localizer["Add an unit"]</a>
            <a asp-action="Edit" asp-route-id="@Model.OrbatID" class="btn btn-secondary">@Localizer["Edit"]</a>
        </p>
    }

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Localizer["Symbol"]
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Units![0].UniqueDesignation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Units![0].Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Units![0].Trigram)
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Units!)
            {
                var sdic = item.GetNatoSymbol('3');
                var symbol = await App6dSymbolGenerator.GenerateAsync(sdic, new Pmad.Milsymbol.Icons.SymbolIconOptions());
                var png = symbol.ToPng();
            <tr>
                <td>
                        <img src="data:image/png;base64,@Convert.ToBase64String(png)" height="@(symbol.Height/2)" alt="@sdic" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UniqueDesignation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Trigram)
                </td>
                <td>
                    @if (canEdit)
                    {
                        <a class="btn btn-sm btn-outline-primary" asp-controller="OrbatUnits" asp-action="Edit" asp-route-id="@item.OrbatUnitID">@Localizer["Edit"]</a>
                        @if (item.Children == null || item.Children.Count == 0)
                        {
                            <a class="btn btn-sm btn-outline-danger" asp-controller="OrbatUnits" asp-action="Delete" asp-route-id="@item.OrbatUnitID">@Localizer["Delete"]</a>
                        }
                    }
                </td>
            </tr>
            }
        </tbody>
    </table>


</div>